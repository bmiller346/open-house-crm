[{"E:\\agentwarehouse\\client\\src\\index.js":"1","E:\\agentwarehouse\\client\\src\\App.js":"2","E:\\agentwarehouse\\client\\src\\components\\pages\\About.js":"3","E:\\agentwarehouse\\client\\src\\components\\pages\\Dashboard.js":"4","E:\\agentwarehouse\\client\\src\\components\\pages\\Home.js":"5","E:\\agentwarehouse\\client\\src\\components\\layout\\Appbar.js":"6","E:\\agentwarehouse\\client\\src\\context\\contact\\ContactState.js":"7","E:\\agentwarehouse\\client\\src\\context\\contact\\contactContext.js":"8","E:\\agentwarehouse\\client\\src\\context\\contact\\contactReducer.js":"9","E:\\agentwarehouse\\client\\src\\context\\types.js":"10","E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelA.js":"11","E:\\agentwarehouse\\client\\src\\components\\static\\SplashPanelA.js":"12","E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelC.js":"13","E:\\agentwarehouse\\client\\src\\components\\contacts\\Contacts.js":"14","E:\\agentwarehouse\\client\\src\\components\\contacts\\ContactForm.js":"15","E:\\agentwarehouse\\client\\src\\components\\contacts\\NoteCard.js":"16","E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelB.js":"17","E:\\agentwarehouse\\client\\src\\components\\contacts\\ContactItem.js":"18","E:\\agentwarehouse\\client\\src\\components\\modals\\MapModal.js":"19","E:\\agentwarehouse\\client\\src\\components\\map\\Map.js":"20","E:\\agentwarehouse\\client\\src\\components\\pages\\Develop.js":"21","E:\\agentwarehouse\\client\\src\\utils\\GH_API.js":"22"},{"size":153,"mtime":1610431542449,"results":"23","hashOfConfig":"24"},{"size":1363,"mtime":1610654740982,"results":"25","hashOfConfig":"24"},{"size":501,"mtime":1610224269677,"results":"26","hashOfConfig":"24"},{"size":1412,"mtime":1610166547125,"results":"27","hashOfConfig":"24"},{"size":258,"mtime":1610654954413,"results":"28","hashOfConfig":"24"},{"size":1467,"mtime":1610657901240,"results":"29","hashOfConfig":"24"},{"size":2267,"mtime":1610224408746,"results":"30","hashOfConfig":"24"},{"size":115,"mtime":1608969518461,"results":"31","hashOfConfig":"24"},{"size":404,"mtime":1610224487024,"results":"32","hashOfConfig":"24"},{"size":452,"mtime":1610677478440,"results":"33","hashOfConfig":"24"},{"size":1009,"mtime":1610224347131,"results":"34","hashOfConfig":"24"},{"size":1110,"mtime":1610606041598,"results":"35","hashOfConfig":"24"},{"size":1055,"mtime":1610224361232,"results":"36","hashOfConfig":"24"},{"size":544,"mtime":1610654840842,"results":"37","hashOfConfig":"24"},{"size":6122,"mtime":1610676981128,"results":"38","hashOfConfig":"24"},{"size":1172,"mtime":1610224225102,"results":"39","hashOfConfig":"24"},{"size":1382,"mtime":1610224355670,"results":"40","hashOfConfig":"24"},{"size":3644,"mtime":1610666291654,"results":"41","hashOfConfig":"24"},{"size":2216,"mtime":1610599230596,"results":"42","hashOfConfig":"24"},{"size":1420,"mtime":1610166547124,"results":"43","hashOfConfig":"24"},{"size":3722,"mtime":1610690907638,"results":"44","hashOfConfig":"24"},{"size":796,"mtime":1610689249579,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"5lzds6",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},"E:\\agentwarehouse\\client\\src\\index.js",[],["96","97"],"E:\\agentwarehouse\\client\\src\\App.js",[],"E:\\agentwarehouse\\client\\src\\components\\pages\\About.js",[],"E:\\agentwarehouse\\client\\src\\components\\pages\\Dashboard.js",[],"E:\\agentwarehouse\\client\\src\\components\\pages\\Home.js",[],"E:\\agentwarehouse\\client\\src\\components\\layout\\Appbar.js",[],"E:\\agentwarehouse\\client\\src\\context\\contact\\ContactState.js",[],"E:\\agentwarehouse\\client\\src\\context\\contact\\contactContext.js",[],"E:\\agentwarehouse\\client\\src\\context\\contact\\contactReducer.js",["98"],"import {\r\n  ADD_CONTACT,\r\n  // DELETE_CONTACT,\r\n  // SET_ALERT,\r\n  // CLEAR_CURRENT,\r\n  // UPDATE_CONTACT,\r\n  // FILTER_CONTACTS,\r\n  // CLEAR_FILTER,\r\n} from \"../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_CONTACT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","E:\\agentwarehouse\\client\\src\\context\\types.js",[],"E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelA.js",[],"E:\\agentwarehouse\\client\\src\\components\\static\\SplashPanelA.js",[],"E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelC.js",[],"E:\\agentwarehouse\\client\\src\\components\\contacts\\Contacts.js",[],"E:\\agentwarehouse\\client\\src\\components\\contacts\\ContactForm.js",[],"E:\\agentwarehouse\\client\\src\\components\\contacts\\NoteCard.js",[],"E:\\agentwarehouse\\client\\src\\components\\static\\AboutPanelB.js",[],"E:\\agentwarehouse\\client\\src\\components\\contacts\\ContactItem.js",["99"],"//* Dependencies\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//* Material UI components, hooks, and icons\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport CustomizedDialogs from \"../modals/MapModal\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport ContactMailIcon from \"@material-ui/icons/ContactMail\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: \"1rem\",\r\n  },\r\n  title: {\r\n    textAlign: \"center\",\r\n  },\r\n  pos: {\r\n    marginBottom: \"1rem\",\r\n  },\r\n  buttonGroup: {\r\n    justifyContent: \"center\",\r\n  },\r\n  Box: {\r\n    marginTop: \"1rem\",\r\n  },\r\n});\r\n\r\n//* Checks the contact type and returns the appropriate badge background color\r\nconst typeCheck = (type) => {\r\n  switch (type) {\r\n    case \"vendor\":\r\n      return \"lightgreen\";\r\n    case \"client\":\r\n      return \"lightblue\";\r\n    default:\r\n      return \"yellow\";\r\n  }\r\n};\r\nexport const ContactItem = ({ contact }) => {\r\n  const classes = useStyles();\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    email,\r\n    phone,\r\n    streetNumber,\r\n    street,\r\n    address2,\r\n    city,\r\n    state,\r\n    zipcode,\r\n    type,\r\n  } = contact;\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" className={classes.title}>\r\n          {name}{\" \"}\r\n          <Chip\r\n            size=\"small\"\r\n            label={type.charAt(0).toUpperCase() + type.slice(1)}\r\n            style={{ background: typeCheck(type) }}\r\n            icon={<FaceIcon size=\"small\" />}\r\n          />\r\n        </Typography>\r\n        <Box textAlign=\"center\" className={classes.Box}>\r\n          <ButtonGroup className={classes.buttonGroup}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<ContactMailIcon />}\r\n              href={`mailto:${email}`}\r\n            >\r\n              {email}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<PhoneIcon />}\r\n              href={`tel:${phone}`}\r\n              color=\"primary\"\r\n            >\r\n              {phone}\r\n            </Button>\r\n          </ButtonGroup>\r\n        </Box>\r\n\r\n        <Box className={classes.Box}>\r\n          {street && (\r\n            <Typography variant=\"body1\">\r\n              {streetNumber} {street}\r\n            </Typography>\r\n          )}\r\n          {address2 && <Typography variant=\"body1\">{address2}</Typography>}\r\n          {city && (\r\n            <Typography variant=\"body1\">\r\n              {city} {state} {zipcode}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        <ButtonGroup variant=\"contained\" size=\"small\">\r\n          <Button startIcon={<EditIcon />} color=\"primary\">\r\n            Edit\r\n          </Button>\r\n          <Button startIcon={<DeleteIcon />} color=\"secondary\">\r\n            Delete\r\n          </Button>\r\n          <CustomizedDialogs />\r\n        </ButtonGroup>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","E:\\agentwarehouse\\client\\src\\components\\modals\\MapModal.js",[],"E:\\agentwarehouse\\client\\src\\components\\map\\Map.js",[],["100","101"],"E:\\agentwarehouse\\client\\src\\components\\pages\\Develop.js",["102","103","104","105"],"//* Dependencies\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport API from \"../../utils/GH_API\";\r\n\r\n//* Material-UI components, hooks, and icons\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  gridContainer: {\r\n    flexGrow: 1,\r\n    padding: \"1rem\",\r\n  },\r\n  badge: {\r\n    marginTop: \"0px\",\r\n    margin: \"6px\",\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n    margin: \"3px\",\r\n    background: \"silver\",\r\n    padding: \"3px\",\r\n  },\r\n}));\r\n\r\nconst Develop = () => {\r\n  const [issues, setIssues] = useState([]);\r\n  const [issue, setIssue] = useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    loadIssues();\r\n  }, []);\r\n\r\n  function loadIssues() {\r\n    API.getIssues().then((issues) => {\r\n      setIssues(issues);\r\n      console.table(issues);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Typography variant=\"h4\" align=\"center\">\r\n        Open GitHub Issues\r\n      </Typography>\r\n      <Container className={classes.root}>\r\n        {issues.map((issue) => (\r\n          <Paper className={classes.control}>\r\n            <Grid container spacing={2} className={classes.gridContainer}>\r\n              <Grid item xs>\r\n                <Typography variant=\"h6\">\r\n                  <strong>Issue</strong>: {issue.title}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Owner</strong>:{\" \"}\r\n                  <a href={\"http://github.com/\" + issue.ghUser} target=\"_blank\">\r\n                    {issue.ghUser}\r\n                  </a>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  label={issue.state}\r\n                  size=\"small\"\r\n                  className={classes.badge}\r\n                  style={{ background: \"lightgreen\" }}\r\n                ></Chip>\r\n                <Badge\r\n                  badgeContent={issue.comments}\r\n                  className={classes.badge}\r\n                  color=\"primary\"\r\n                >\r\n                  <CommentIcon />\r\n                </Badge>\r\n                <IconButton\r\n                  href={\r\n                    \"http://github.com/lucsedirae/open-house-crm/issues/\" +\r\n                    issue.number\r\n                  }\r\n                  target=\"_blank\"\r\n                >\r\n                  <GitHubIcon color=\"secondary\" className={classes.badge} />\r\n                </IconButton>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Created: </strong>\r\n                  {issue.createdAt}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Last Updated: </strong>\r\n                  {issue.updatedAt}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Typography>\r\n                  <strong>Description: </strong>\r\n                  {issue.description}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        ))}\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Develop;\r\n","E:\\agentwarehouse\\client\\src\\utils\\GH_API.js",["106"],"import axios from \"axios\";\r\n\r\nexport default {\r\n  getIssues: function () {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .get(\"https://api.github.com/repos/lucsedirae/open-house-crm/issues\")\r\n        .then((res) => {\r\n          const issues = res.data;\r\n          const results = issues.map((issue) => {\r\n            return {\r\n              title: issue.title,\r\n              ghUser: issue.user.login,\r\n              state: issue.state,\r\n              createdAt: issue.created_at,\r\n              updatedAt: issue.updated_at,\r\n              description: issue.body,\r\n              number: issue.number,\r\n              comments: issue.comments\r\n            };\r\n          });\r\n          resolve(results);\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n};\r\n",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":1,"nodeType":"113","endLine":21,"endColumn":3},{"ruleId":"114","severity":1,"message":"115","line":56,"column":5,"nodeType":"116","messageId":"117","endLine":56,"endColumn":7},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":35,"column":5,"nodeType":"122","messageId":"123","endLine":35,"endColumn":12},{"ruleId":"114","severity":1,"message":"124","line":41,"column":10,"nodeType":"116","messageId":"117","endLine":41,"endColumn":15},{"ruleId":"114","severity":1,"message":"125","line":41,"column":17,"nodeType":"116","messageId":"117","endLine":41,"endColumn":25},{"ruleId":"126","severity":1,"message":"127","line":71,"column":65,"nodeType":"128","endLine":71,"endColumn":80},{"ruleId":"111","severity":1,"message":"129","line":3,"column":1,"nodeType":"113","endLine":27,"endColumn":3},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar",["130"],["131"],"no-dupe-keys","Duplicate key 'padding'.","ObjectExpression","unexpected","'issue' is assigned a value but never used.","'setIssue' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]